parameters:
- name: arch
  type: string
  values:
  - amd64
  - armhf
  - arm64
  default: amd64

- name: pool
  type: string
  values:
  - sonicbld
  - default
  default: default

- name: timeout
  type: number
  default: 60

- name: sonic_slave
  type: string

- name: sairedis_artifact_name
  type: string

- name: swss_common_artifact_name
  type: string

- name: artifact_name
  type: string

jobs:
- job:
  displayName: ${{ parameters.arch }}
  timeoutInMinutes: ${{ parameters.timeout }}

  pool:
    ${{ if ne(parameters.pool, 'default') }}:
      name: ${{ parameters.pool }}
    ${{ else }}:
      vmImage: 'ubuntu-20.04'

  container:
    image: sonicdev-microsoft.azurecr.io:443/${{ parameters.sonic_slave }}:latest

  steps:
  - checkout: sonic-swss
    submodules: true
    clean: true
  - template: template-get-source-branch.yml
  - script: |
      set -ex
      git checkout $(SOURCE_BRANCH)
    displayName: Set up sonic-swss branch
  - script: |
      sudo apt-get install -y libhiredis0.14 libhiredis-dev
      sudo apt-get install -y libzmq5 libzmq3-dev
      sudo apt-get install -qq -y \
          libhiredis-dev \
          swig3.0
      sudo apt-get install -y libdbus-1-3
      sudo apt-get install -y libteam-dev \
          libteam5 \
          libteamdctl0
    displayName: "Install dependencies"
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: ${{ parameters.swss_common_artifact_name }}
      path: $(Build.ArtifactStagingDirectory)/download
    displayName: "Download sonic swss common deb packages"
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: ${{ parameters.sairedis_artifact_name }}
      path: $(Build.ArtifactStagingDirectory)/download
    displayName: "Download sonic sairedis deb packages"
  - task: DownloadPipelineArtifact@2
    inputs:
      source: specific
      project: build
      pipeline: Azure.sonic-buildimage.common_libs
      runVersion: 'latestFromBranch'
      runBranch: 'refs/heads/$(SOURCE_BRANCH)'
      path: $(Build.ArtifactStagingDirectory)/download
      patterns: |
        libnl-3*.deb
        libnl-genl*.deb
        libnl-route*.deb
        libnl-nf*.deb
    displayName: "Download common libs"

  - script: |
      set -ex
      sudo dpkg -i $(ls download/*.deb)
    workingDirectory: $(Build.ArtifactStagingDirectory)
    displayName: "Install libnl3, sonic swss common, and sairedis"
  - script: |
      set -ex
      rm ../*.deb || true
      ./autogen.sh
      dpkg-buildpackage -us -uc -b -j$(nproc)
      mv ../*.deb $(Build.ArtifactStagingDirectory)
    displayName: "Compile sonic swss"
  - publish: $(Build.ArtifactStagingDirectory)
    artifact: ${{ parameters.artifact_name }}
    displayName: "Archive swss debian packages"

parameters:
- name: arch
  type: string
  values:
  - amd64
  - armhf
  - arm64

- name: pool
  type: string
  values:
  - sonicbld
  - default
  default: default

- name: timeout
  type: number
  default: 60

- name: sonic_slave
  type: string

- name: artifact_name
  type: string

- name: run_unit_test
  type: boolean
  default: false

- name: archive_gcov
  type: boolean
  default: false

jobs:
- job:
  displayName: ${{ parameters.arch }}
  timeoutInMinutes: ${{ parameters.timeout }}

  pool:
    ${{ if ne(parameters.pool, 'default') }}:
      name: ${{ parameters.pool }}
    ${{ if eq(parameters.pool, 'default') }}:
      vmImage: 'ubuntu-20.04'

  container:
    image: sonicdev-microsoft.azurecr.io:443/${{ parameters.sonic_slave }}:latest

  steps:
  - script: |
      sudo apt-get install -qq -y \
        libhiredis-dev \
        libnl-3-dev \
        libnl-genl-3-dev \
        libnl-route-3-dev \
        libnl-nf-3-dev \
        swig3.0
    displayName: "Install dependencies"
  - script: |
      set -ex
      ./autogen.sh
      fakeroot debian/rules DEB_CONFIGURE_EXTRA_FLAGS='--enable-code-coverage' CFLAGS="" CXXFLAGS="" binary && cp ../*.deb .
    displayName: "Compile sonic swss common with coverage enabled"
  - ${{ if eq(parameters.run_unit_test, true) }}:
    - script: |
        set -ex
        sudo pip install Pympler==0.8
        sudo apt-get install -y redis-server
        sudo sed -i 's/notify-keyspace-events ""/notify-keyspace-events AKE/' /etc/redis/redis.conf
        sudo sed -ri 's/^# unixsocket/unixsocket/' /etc/redis/redis.conf
        sudo sed -ri 's/^unixsocketperm .../unixsocketperm 777/' /etc/redis/redis.conf
        sudo sed -ri 's/redis-server.sock/redis.sock/' /etc/redis/redis.conf
        sudo service redis-server restart

        sudo dpkg -i libswsscommon_*.deb
        sudo dpkg -i python-swsscommon_*.deb

        sudo ./tests/tests && redis-cli FLUSHALL && pytest

        gcovr -r ./ -x -o coverage.xml
        cd common
        mkdir -p htmlcov
        gcovr -r ./ --html --html-details -o htmlcov/index.html
      displayName: "Run swss common unit tests"
  - publish: $(System.DefaultWorkingDirectory)/
    artifact: ${{ parameters.artifact_name }}
    displayName: "Archive swss common debian packages"
  - ${{ if eq(parameters.archive_gcov, true) }}:
    - script: |
        set -ex
        # Install .NET CORE
        curl -sSL https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        sudo apt-add-repository https://packages.microsoft.com/debian/10/prod
        sudo apt-get update
        sudo apt-get install -y dotnet-sdk-5.0
      displayName: "Install .NET CORE"
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/common/htmlcov/'
      displayName: 'Publish test coverage'
